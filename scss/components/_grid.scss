// Grid:
// .container
// .grid__row
// .grid__col--2
// .grid__col--3
// .grid__col--4
// .grid__col--5
// .grid__col--6
// .grid__col--7
// .grid__col--8
// .grid__col--9
// .grid__col--10
// .grid__col--11
// .grid__col--12
// .centered
// .theme__colors
.container {
  @include flexy($wrap: wrap, $just: center, $dir: column, $align: center);
  @include media(768px) {
    width: 90%;
    margin: 0 auto;
    // for grid of images, 4th of container
    & div[class="grid__row"]:nth-of-type(4) {
      @include flexy($just: space-around);
      & div:first-child {
        width: 35%;
      }
      & div:nth-of-type(2) {
        width: 30%;
        margin: 0;
        & img {
          width: 64%;
        }
      }
    }
    // to put a little outside the grids
    & div[class="grid__row"]:nth-of-type(1n + 6) {
      padding: 10px 2px;
    }
  }
  padding: 15px;
}
.grid__row {
  @include flexy($wrap: wrap, $just: center);
  width: 100%;
  padding: 10px;

  @include media(768px) {
    @include flexy($dir: row, $wrap: nowrap);

    // for .grid__col width to 768px
    @for $i from 1 through 12 {
      .grid__col--#{$i} {
        width: 100%/12 * $i;
      }
    }
    // flexy for buttons of col--12.
    div[class="grid__col--12"] {
      @include flexy($just: space-between);
      button {
        width: 20%;
        align-self: center;
        flex-basis: 17%;
      }
      & :nth-child(2n + 3) {
        width: 19%;
      }
    }
    button[type="submit"] {
      width: 100%;
    }
    // for grid-cols to separate between them// to take the 2nd and the siblings.
    div:nth-child(1n + 2) {
      margin-left: 2%;
    }
  }
  div[class="grid__col--6"] {
    @include flexy($dir: column, $align: center);
  }
}

@each $grid-color, $color in $grid-colors {
  .theme__colors.grid__col--#{$grid-color} {
    background-color: $color;
  }
}
.centered {
  margin: auto !important;
}
